@model ManagerDesk.ViewModels.MenuViewModel

@*<div class="row">
    <div class="col-md-12 col-lg-6">*@
        <div class="info-item animated js-menu-form fadeIn" data-itemid="@Model.Id">
            @using (Html.BeginForm("EditMenu", "Menu", FormMethod.Post, new { enctype = "multipart/form-data", id = "EditMenuForm" }))
            {
                <h3 class="info-item-heading">Меню</h3>

                @Html.ValidationMessageFor(model => model.MenuName, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.MenuName, new { htmlAttributes = new { @class = "form-control js-name", placeholder = "Название" } })

                <div class="dropdown">
                    <input readonly="readonly" class="form-control dropdown-toggle hide-readonly js-chosen-rest" value="@Model.AttachedRestaurantName" id="rest-drop-menu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true" data-value="@Guid.Empty" placeholder="Ресторан" />

                    @if (Model.AvailableRests != null && Model.AvailableRests.Any())
                    {
                        <ul class="dropdown-menu" aria-labelledby="rest-drop-menu">
                            @foreach (var rest in Model.AvailableRests)
                            {
                                <li><a href="#" class="js-rest-choose" data-restid="@rest.Id">@rest.Name</a></li>
                            }
                        </ul>
                    }
                </div>

                <div class="form-check">
                    <label class="form-check-label">
                        Показывать это меню тех кто еще не выбрал ресторан.
                        <input type="checkbox" class="form-check-input js-defaultMenu" @Model.DefaultMenuStyle>
                    </label>
                </div>
                
                <button class="btn btn-save-dishes js-save-menu" type="submit">Сохранить</button>
            }
        </div>
    @*</div>
</div>*@